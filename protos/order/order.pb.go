// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package order

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Order struct {
	UserId               string   `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
	From                 string   `protobuf:"bytes,3,opt,name=From,proto3" json:"From,omitempty"`
	To                   string   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Lat                  uint64   `protobuf:"varint,5,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Long                 uint64   `protobuf:"varint,6,opt,name=Long,proto3" json:"Long,omitempty"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_1edaa602f0e5cac9, []int{0}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Order) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Order) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Order) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Order) GetLat() uint64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Order) GetLong() uint64 {
	if m != nil {
		return m.Long
	}
	return 0
}

func (m *Order) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type CreateOrderResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrderResponse) Reset()         { *m = CreateOrderResponse{} }
func (m *CreateOrderResponse) String() string { return proto.CompactTextString(m) }
func (*CreateOrderResponse) ProtoMessage()    {}
func (*CreateOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_1edaa602f0e5cac9, []int{1}
}
func (m *CreateOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrderResponse.Unmarshal(m, b)
}
func (m *CreateOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrderResponse.Marshal(b, m, deterministic)
}
func (dst *CreateOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrderResponse.Merge(dst, src)
}
func (m *CreateOrderResponse) XXX_Size() int {
	return xxx_messageInfo_CreateOrderResponse.Size(m)
}
func (m *CreateOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrderResponse proto.InternalMessageInfo

func (m *CreateOrderResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GetOrderRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrderRequest) Reset()         { *m = GetOrderRequest{} }
func (m *GetOrderRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrderRequest) ProtoMessage()    {}
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_1edaa602f0e5cac9, []int{2}
}
func (m *GetOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderRequest.Unmarshal(m, b)
}
func (m *GetOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderRequest.Marshal(b, m, deterministic)
}
func (dst *GetOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderRequest.Merge(dst, src)
}
func (m *GetOrderRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrderRequest.Size(m)
}
func (m *GetOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderRequest proto.InternalMessageInfo

func (m *GetOrderRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Order)(nil), "Order")
	proto.RegisterType((*CreateOrderResponse)(nil), "CreateOrderResponse")
	proto.RegisterType((*GetOrderRequest)(nil), "GetOrderRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*Order, error)
	CreateOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*CreateOrderResponse, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/OrderService/GetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) CreateOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*CreateOrderResponse, error) {
	out := new(CreateOrderResponse)
	err := c.cc.Invoke(ctx, "/OrderService/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	GetOrder(context.Context, *GetOrderRequest) (*Order, error)
	CreateOrder(context.Context, *Order) (*CreateOrderResponse, error)
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetOrder(ctx, req.(*GetOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateOrder(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrder",
			Handler:    _OrderService_GetOrder_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _OrderService_CreateOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_order_1edaa602f0e5cac9) }

var fileDescriptor_order_1edaa602f0e5cac9 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xe1, 0x4a, 0xc3, 0x40,
	0x10, 0x84, 0xb9, 0x34, 0x49, 0xeb, 0x56, 0xb4, 0xac, 0x22, 0x47, 0x7f, 0xc5, 0xe0, 0x8f, 0x80,
	0x10, 0x41, 0x1f, 0x41, 0x50, 0x02, 0x05, 0xe1, 0xc4, 0x07, 0x88, 0xc9, 0x22, 0xfe, 0xb0, 0x57,
	0x6f, 0x37, 0xbe, 0x87, 0x6f, 0x2c, 0xb7, 0x49, 0x40, 0xc4, 0x7f, 0x33, 0x73, 0x33, 0xec, 0xc7,
	0xc1, 0xda, 0x87, 0x9e, 0x42, 0x7d, 0x08, 0x5e, 0x7c, 0xf9, 0x6d, 0x20, 0x7b, 0x8a, 0x1e, 0x2f,
	0x20, 0x7f, 0x61, 0x0a, 0x4d, 0x6f, 0x4d, 0x61, 0xaa, 0x23, 0x37, 0x39, 0x3c, 0x81, 0xa4, 0xe9,
	0x6d, 0x52, 0x98, 0x2a, 0x73, 0x49, 0xd3, 0x23, 0x42, 0xfa, 0x10, 0xfc, 0x87, 0x5d, 0x68, 0x4b,
	0x75, 0xec, 0x88, 0xb7, 0xa9, 0x26, 0x89, 0x78, 0xdc, 0xc0, 0x62, 0xd7, 0x8a, 0xcd, 0x0a, 0x53,
	0xa5, 0x2e, 0xca, 0xb8, 0xda, 0xf9, 0xfd, 0x9b, 0xcd, 0x35, 0x52, 0x1d, 0x2f, 0xb2, 0xb4, 0x32,
	0xb0, 0x5d, 0x8e, 0x17, 0x47, 0x57, 0xde, 0xc0, 0xd9, 0x7d, 0xa0, 0x56, 0x48, 0xc1, 0x1c, 0xf1,
	0xc1, 0xef, 0x99, 0xd0, 0xc2, 0x92, 0x87, 0xae, 0x23, 0x66, 0x25, 0x5c, 0xb9, 0xd9, 0x96, 0x97,
	0x70, 0xfa, 0x48, 0x32, 0xb5, 0x3f, 0x07, 0x62, 0x99, 0xa8, 0xcd, 0x4c, 0x7d, 0xdb, 0xc2, 0xb1,
	0xbe, 0x3f, 0x53, 0xf8, 0x7a, 0xef, 0x08, 0xaf, 0x60, 0x35, 0x4f, 0x70, 0x53, 0xff, 0x59, 0x6f,
	0xf3, 0x7a, 0x7c, 0xb9, 0x86, 0xf5, 0x2f, 0x12, 0x9c, 0xe2, 0xed, 0x79, 0xfd, 0x0f, 0xdf, 0x6b,
	0xae, 0x3f, 0x7a, 0xf7, 0x13, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x56, 0x6b, 0x6c, 0x60, 0x01, 0x00,
	0x00,
}
